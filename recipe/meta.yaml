{% set name = "mujoco" %}
{% set namecxx = "libmujoco" %}
{% set namepython = "mujoco-python" %}
{% set version = "3.1.6" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://github.com/deepmind/mujoco/archive/refs/tags/{{ version }}.tar.gz
  sha256: 009a251371c444ebf9150ccfe547a14d24eadb4cd81533736abda7d3d398da50
  patches:
    - python_remove_avx.patch
    - cxx_devendor.patch
    - python_devendor.patch
    - ccd_vec3_origin_link_problem.patch
    - disable_copy_cxx_files_in_python_package.patch
    - do_not_install_via_pip.patch
    - unvendor_simulate.patch
    - workaround_cmake_19072.patch
    - 619bis.patch
    - simulate_unvendor_lodepng.patch
    - disable-isolation-and-dep-check-python-build.patch
    - add_samples_prefix.patch
    - add_simulate_prefix.patch
    - 1477.patch

build:
  # See https://github.com/conda-forge/mujoco-feedstock/issues/22
  skip: true  # [(aarch64 or ppc64le or osx) and python_impl == 'pypy']
  number: 0

outputs:
  - name: {{ namecxx }}
    script: build_cxx.sh  # [unix]
    script: bld_cxx.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage(namecxx, max_pin='x.x.x') }}
      # libabseil is used only for tests, we can 
      # safely ignore its run_exports
      ignore_run_exports:
        - libabseil
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - make                                   # [not win]
        - ninja
        - clang 16.*                             # [win]
        - lld 16.*                               # [win]
        # This provides llvm-lib that is used during the linking
        - llvm-tools 16.*                        # [win]
      host:
        - eigen
        - qhull
        - tinyxml2
        - libccd-double
        - libabseil
        - lodepng
      run:
      run_constrained:
        # Older version of this package were named mujoco-cxx, we want to avoid that they are installed
        - mujoco-cxx <0

    test:
      commands:
        - test -f ${PREFIX}/include/mujoco/mujoco.h  # [not win]
        - test -f ${PREFIX}/lib/libmujoco${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/bin/mujoco_plugin/libactuator${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/bin/mujoco_plugin/libelasticity${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/bin/mujoco_plugin/libsensor${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/bin/mujoco_plugin/libsdf${SHLIB_EXT}  # [unix]
        - if not exist %LIBRARY_INC%\\mujoco\\mujoco.h exit 1  # [win]
        - if not exist %LIBRARY_LIB%\\mujoco.lib exit 1  # [win]
        - if not exist %LIBRARY_BIN%\\mujoco.dll exit 1  # [win]
        - if not exist %LIBRARY_BIN%\\mujoco_plugin\\actuator.dll exit 1  # [win]
        - if exist %LIBRARY_BIN%\\mujoco_plugin\\actuator.lib exit 1  # [win]
        - if not exist %LIBRARY_BIN%\\mujoco_plugin\\elasticity.dll exit 1  # [win]
        - if exist %LIBRARY_BIN%\\mujoco_plugin\\elasticity.lib exit 1  # [win]
        - if not exist %LIBRARY_BIN%\\mujoco_plugin\\sensor.dll exit 1  # [win]
        - if exist %LIBRARY_BIN%\\mujoco_plugin\\sensor.lib exit 1  # [win]
        - if not exist %LIBRARY_BIN%\\mujoco_plugin\\sdf.dll exit 1  # [win]
        - if exist %LIBRARY_BIN%\\mujoco_plugin\\sdf.lib exit 1  # [win]
    about:
      home: https://github.com/deepmind/mujoco
      license: Apache-2.0
      license_file:
        - LICENSE
        - build_cxx/_deps/tinyobjloader-src/LICENSE
        - build_cxx/_deps/sdflib-src/LICENSE
      summary: 'Package for the C/C++ MuJoCo library, plugins and models.'

  - name: mujoco-samples
    script: build_samples.sh  # [unix]
    script: bld_samples.bat  # [win]
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - ninja
        - {{ cdt('mesa-libgl-devel') }}  # [linux]
        - {{ cdt('mesa-dri-drivers') }}  # [linux]
        - {{ cdt('libselinux') }}  # [linux]
        - {{ cdt('libxdamage') }}  # [linux]
        - {{ cdt('libxxf86vm') }}  # [linux]
        - {{ cdt('libxext') }}     # [linux]
      host:
        - xorg-libxfixes  # [linux]
        - libmujoco
        - glfw
      run:
        # Somehow the libmujoco run_exports is ignored here, let's add explicitly the run dependency
        - {{ pin_subpackage(namecxx, max_pin='x.x.x') }}

    test:
      commands:
        - test -f ${PREFIX}/bin/mujoco-testspeed  # [unix]
        - test ! -f ${PREFIX}/bin/testspeed  # [unix]
        - if not exist %LIBRARY_BIN%\\mujoco-testspeed.exe exit 1  # [win]
        - if exist %LIBRARY_BIN%\\testspeed.exe exit 1  # [win]
    about:
      home: https://github.com/deepmind/mujoco
      license: Apache-2.0
      license_file:
        - LICENSE
      summary: 'MuJoCo sample executables package.'
      description: |
        This package contains the `mujoco-basic`, `mujoco-compile`, `mujoco-record` and `mujoco-testspeed`.
        With respect to the upstream binaries, where the executables are called `basic`, `compile`, `record` and `testspeed`,
        in this package the command names are prefixed by a `mujoco-` prefix to avoid naming collisions.


  - name: mujoco-simulate
    script: build_simulate.sh  # [unix]
    script: bld_simulate.bat  # [win]
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - ninja
        - {{ cdt('mesa-libgl-devel') }}  # [linux]
        - {{ cdt('mesa-dri-drivers') }}  # [linux]
        - {{ cdt('libselinux') }}  # [linux]
        - {{ cdt('libxdamage') }}  # [linux]
        - {{ cdt('libxxf86vm') }}  # [linux]
        - {{ cdt('libxext') }}     # [linux]
      host:
        - xorg-libxfixes  # [linux]
        - libmujoco
        - glfw
      run:
        # Somehow the libmujoco run_exports is ignored here, let's add explicitly the run dependency
        - {{ pin_subpackage(namecxx, max_pin='x.x.x') }}

    test:
      commands:
        - test -f ${PREFIX}/bin/mujoco-simulate  # [unix]
        - test ! -f ${PREFIX}/bin/simulate  # [unix]
        - if not exist %LIBRARY_BIN%\\mujoco-simulate.exe exit 1  # [win]
        - if exist %LIBRARY_BIN%\\simulate.exe exit 1  # [win]
    about:
      home: https://github.com/deepmind/mujoco
      license: Apache-2.0
      license_file:
        - LICENSE
      summary: 'MuJoCo simulate executable package.'
      description: |
        This package contains the `mujoco-simulate` executable.
        With respect to the upstream binaries, where the executable is called `simulate`,
        in this package the command name is prefixed by a `mujoco-` prefix to avoid naming collisions.


  - name: {{ namepython }}
    script: build_py.sh  # [unix]
    script: bld_py.bat  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - make                                   # [not win]
        - ninja                                  # [win]
        - cmake
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - numpy                                  # [build_platform != target_platform]
        - pip                                    # [build_platform != target_platform]
        - setuptools                             # [build_platform != target_platform]
        - python-build                           # [build_platform != target_platform]
        - virtualenv                             # [build_platform != target_platform]
        - absl-py                                # [build_platform != target_platform]
        - clang 16.*                             # [win]
        - lld 16.*                               # [win]
        # This provides llvm-lib that is used during the linking
        - llvm-tools 16.*                        # [win]
        - bash                                   # [not win]
        - posix                                  # [win]
        - {{ cdt('mesa-libgl-devel') }}  # [linux]
        - {{ cdt('mesa-dri-drivers') }}  # [linux]
        - {{ cdt('libselinux') }}  # [linux]
        - {{ cdt('libxdamage') }}  # [linux]
        - {{ cdt('libxxf86vm') }}  # [linux]
        - {{ cdt('libxext') }}     # [linux]
      host:
        - {{ pin_subpackage(namecxx, exact=True) }}
        - eigen
        - libabseil
        - lodepng
        - python
        - pip
        - setuptools
        - python-build
        - virtualenv
        - pybind11
        - pybind11-abi
        - numpy
        - absl-py
        - glfw
        - pyglfw
        - pyopengl
        - xorg-libxfixes  # [linux]
      run:
        - {{ pin_subpackage(namecxx, exact=True) }}
        - python
        - numpy
        - absl-py
        - pyglfw
        - pyopengl
        # Transitive dependencies of etils[epath], not directly available on conda-forge
        - etils  # [py!=38 or py!=39]
        # Workaround for https://github.com/conda-forge/mujoco-feedstock/pull/32#issuecomment-1821254102
        - etils <=1.3.0  # [py==38]
        # Workaround for https://github.com/conda-forge/mujoco-feedstock/pull/33#issuecomment-1854821962
        - etils <=1.5.1  # [py==39]
        - fsspec
        - importlib_resources
        - typing_extensions
        - zipp
    test:
      imports:
        - mujoco
      requires:
        - pytest
        - pip
      commands:
        # pypy skipped as a workaround for https://github.com/conda-forge/mujoco-feedstock/issues/37
        - pytest --pyargs mujoco -v -k "not render"  # [python_impl != 'pypy']
        - pip check
    about:
      home: https://github.com/deepmind/mujoco
      license: Apache-2.0
      license_file:
        - LICENSE
      summary: Python bindings for MuJoCo.


  - name: mujoco-mjx
    build:
      noarch: python
      # Skip platforms for which jax is not available
      # note that this only influences tests, in the end the package is noarch
      # so only one package will be uploaded, and can be installed on any platform,
      # as soon as the dependencies become available
      skip: true  # [python_impl == 'pypy']
      skip: true  # [win]
      skip: true  # [ppc64le]
      # Skip platforms for which for some reason the test is failing for not finding mujoco-python,
      # even if it the mujoco-python was just build
      skip: true  # [arm64]
      skip: true  # [aarch64]
      script: python -m pip install ./mjx/ --no-deps -vv
    requirements:
      host:
        - pip
        - python >=3.7
      run:
        # jax minimum version based on ./mjx/requirements.txt file
        - jaxlib >=0.4.13
        - jax >=0.4.13
        - absl-py
        - scipy
        - trimesh
        - mujoco-python >={{ version }}
        # Transitive dependencies of etils[epath], not directly available on conda-forge
        - etils
        - fsspec
        - importlib_resources
        - typing_extensions
        - zipp
    test:
      imports:
        - mujoco.mjx
      requires:
        - pip
        - pytest
      commands:
        - pip check
        # Skipping test_box_box as it also fails upstream https://github.com/conda-forge/mujoco-feedstock/pull/31#issuecomment-1770520403
        # Skipping test_collision_driver tests to speed up the tests and as some integration tests make the remote runner crash/hang
        - pytest --pyargs mujoco.mjx -v -k "not (test_collision_driver or test_box_box)"
    about:
      home: https://github.com/deepmind/mujoco
      license: Apache-2.0
      license_file:
        - LICENSE
      summary: Package for the jax-based MuJoCo XLA (mjx) simulator, that can also run on GPU.


  - name: {{ name }}
    requirements:
      run:
        - {{ pin_subpackage(namecxx, exact=True) }}
        - {{ pin_subpackage('mujoco-samples', exact=True) }}
        - {{ pin_subpackage('mujoco-simulate', exact=True) }}
        - {{ pin_subpackage(namepython, max_pin='x.x.x') }}
    test:
      imports:
        - mujoco
    about:
      home: https://github.com/deepmind/mujoco
      license: Apache-2.0
      license_file:
        - LICENSE
        - build_cxx/_deps/tinyobjloader-src/LICENSE
        - build_cxx/_deps/sdflib-src/LICENSE
      summary: Meta-package that depends on `libmujoco`, `mujoco-samples`,`mujoco-simulate` and `mujoco-python`.

about:
  home: https://github.com/deepmind/mujoco
  license: Apache-2.0
  license_file:
    - LICENSE
    - build_cxx/_deps/tinyobjloader-src/LICENSE
    - build_cxx/_deps/sdflib-src/LICENSE
  summary: Multi-Joint dynamics with Contact. A general purpose multi-body dynamics simulator.

extra:
  recipe-maintainers:
    - traversaro
